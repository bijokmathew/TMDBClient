plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "org.jetbrains.kotlin.kapt"
}

android {
    namespace 'com.example.tmdbclient'
    compileSdk 33


    defaultConfig {
        applicationId "com.example.tmdbclient"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"
        kapt{
            arguments{
                arg("room.schemaLocation","$projectDir/schemas")
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', "API_KEY", '"0218fed228907eb43332288afdd789fa"'
        buildConfigField 'String', "BASE_URL", '"https://api.themoviedb.org/3/"'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures{
        dataBinding = true
        buildConfig = true
    }
}

dependencies {

    def lifecycle_version = "2.6.1"
    def coroutines_version = "1..20"
    def room_version = "2.5.2"
    def retrofit_version = "2.9.0"
    def logging_interceptor_version = "4.11.0"
    def dagger_version = "2.47"
    def glide_version = "4.15.1"
    def arch_version = "2.2.0"

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //logging-interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation "androidx.room:room-runtime:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation 'androidx.databinding:databinding-runtime:8.0.2'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.arch.core:core-testing:2.0.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    //hh
    androidTestImplementation "com.google.truth:truth:1.1.4"


    testImplementation "com.google.truth:truth:1.1.4"
    testImplementation "androidx.arch.core:core-testing:2.0.0"
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'androidx.test.ext:junit:1.1.5'
}